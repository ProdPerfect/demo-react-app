{"version":3,"sources":["p2-color-logo.png","Words.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Words","styleOverride","fontSize","react_default","a","createElement","className","href","style","id","target","rel","Component","App","src","p2Logo","alt","src_Words_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","e","n","r","o","Keen","t","d","getElementsByTagName","i","c","onload","onreadystatechange","readyState","test","async","libraryUrl","parentNode","insertBefore","requestType","ProdPerfectKeen","extendEvents","visitor","user_id","initAutoTracking","ignoreDisabledFormFields","recordClicks","recordFormSubmits","recordInputChanges","recordPageViews","recordPageUnloads","recordScrollState","host","projectId","writeKey"],"mappings":"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","file":"static/js/main.55453d6b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/p2-color-logo.8a478909.png\";","import React, { Component } from 'react';\r\n\r\nimport './Words.css'\r\n\r\n// A class for the main content of our single github page.\r\n\r\nclass Words extends Component {\r\n  render() {\r\n    const styleOverride = {\r\n        'fontSize': '0.8em'\r\n    };\r\n\r\n    return (\r\n<div className=\"main\">\r\n    <h1>React Demo App</h1>\r\n\r\n    <div className=\"main_content\">\r\n        <p>We created this repo (and this page) to demonstrate how to add the ProdPerfect tracking\r\n        snippet to your existing React app. The source code for this app,\r\n        including the tracking code,\r\n        <a href=\"https://github.com/ProdPerfect/demo-react-app\">can be found on GitHub</a></p>\r\n\r\n        <h2>Integrating the ProdPerfect Tracker</h2>\r\n\r\n        <ol>\r\n            <li>Add <a href=\"#snippet-code\">the snippet</a> (see below) to the same file where you call\r\n<pre><code className=\"language-javascript\" style={styleOverride}>{`ReactDOM.render(<App />, ...)`}</code></pre>\r\n            </li>\r\n\r\n            <li>Configure the snippet with your custom values</li>\r\n            <li>and you're ready to go!</li>\r\n        </ol>\r\n\r\n\r\n<div>In the case of this demo, the tracking snippet has been added to the<div className=\"inline-code\">src/index.js</div>file.</div>\r\n\r\n<h2 id=\"snippet-code\">ProdPerfect Tracking-Snippet Code</h2>\r\n<pre>\r\n<code className=\"language-javascript\" style={styleOverride}>\r\n{`const prodPerfectConfig = {\r\n    host: '<YOUR_PRODPERFECT_URL>',\r\n    libraryUrl: '<URL_TO_TRACKING_JS_LIB>',\r\n    projectId: '<YOUR_PROJECT_ID>',\r\n    writeKey: '<YOUR_WRITEKEY>'\r\n};\r\n\r\n(function(e){var n,r=\"ProdPerfectKeen\",o=!!window.Keen&&window.Keen;\r\nwindow[r]=window[r]||{ready:function(t){var a,d=document.getElementsByTagName(\"head\")[0],\r\ni=document.createElement(\"script\"),c=window;i.onload=i.onreadystatechange=function(){\r\nif(!(i.readyState&&!/^c|loade/.test(i.readyState)||a)){\r\nif(i.onload=i.onreadystatechange=null,a=1,n=c.Keen,o)c.Keen=o;else try{delete c.Keen}\r\ncatch(e){c.Keen=void 0}c[r]=n,c[r].ready(t)}},i.async=1,i.src=e.libraryUrl,\r\nd.parentNode.insertBefore(i,d)}},window[r].ready(function(){e.requestType=\"beacon\";\r\nvar n=new window.ProdPerfectKeen(e);n.extendEvents({visitor:{user_id:null}});n.initAutoTracking({\r\nignoreDisabledFormFields:!1,recordClicks:!0,recordFormSubmits:!0,recordInputChanges:!0,\r\nrecordPageViews:!0,recordPageUnloads:!0,recordScrollState:!0})})})(prodPerfectConfig);`}\r\n</code>\r\n</pre>\r\n\r\n<h2>Verifying tracking snippet activity</h2>\r\n<div>You can check that the page is indeed sending data back the the ProdPerfect servers\r\nby opening your browser's developer tools, going to the \"network\" section and confirming that\r\nwhenever you click anywhere on the actual page a network request is made.  The request URL should end with\r\n<div className=\"inline-code\">...clicks?api_key=...</div>.\r\nThe tracking snippet is running on this page, so you can check it right now!</div>\r\n\r\n<h2>Running the demo locally</h2>\r\n\r\n<ol className=\"run-locally-instructions\">\r\n    <li>Modify the<div className=\"inline-code\">prodPerfectConfig</div>object\r\n        in that the<div className=\"inline-code\">src/index.js</div>file with your host,\r\n        library URL, project ID and write key values.</li>\r\n    <li>Run<div className=\"inline-code\">npm start</div>\r\n        in your terminal</li>\r\n    <li>navigate to <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3000</a> with your browser</li>\r\n</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Words;\r\n","import React, { Component } from 'react';\nimport p2Logo from './p2-color-logo.png'\nimport './App.css';\nimport Words from './Words'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={p2Logo} className=\"p2-logo\" alt=\"Prod Perfect logo\" />\n        </header>\n        <Words />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Prism from 'prismjs'; // eslint-disable-line\nimport './prism.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst prodPerfectConfig = {\n    host: 'pevnertest.datapipe.prodperfect.com/v1',\n    libraryUrl: 'https://pevnertest.trackinglibrary.prodperfect.com/keen-tracking.min.js',\n    projectId: '3tq1WVDi5zBF08w3EqFCLK11',\n    writeKey: 'DQZGHGI5JRHCIIL249LR954YXNDL6IWJOYIRBX66TXY4FXFWTMOR4LCJ77WKESG59WTTADQB7BKGCUVPS0U1A0X13NI6EWQEKUY8LOPZDG5HTI8DXUB933S2TWOL7QJ5EI0P2PQUNED67TL1XOB3EBKM4QHLTH66GESTSWGXQMAZRHLS8TXMGIS260NELCIR'\n};\n\n(function(e){var n,r=\"ProdPerfectKeen\",o=!!window.Keen&&window.Keen;window[r]=window[r]||{ready:function(t){var a,d=document.getElementsByTagName(\"head\")[0],i=document.createElement(\"script\"),c=window;i.onload=i.onreadystatechange=function(){if(!(i.readyState&&!/^c|loade/.test(i.readyState)||a)){if(i.onload=i.onreadystatechange=null,a=1,n=c.Keen,o)c.Keen=o;else try{delete c.Keen}catch(e){c.Keen=void 0}c[r]=n,c[r].ready(t)}},i.async=1,i.src=e.libraryUrl,d.parentNode.insertBefore(i,d)}},window[r].ready(function(){e.requestType=\"beacon\";var n=new window.ProdPerfectKeen(e);n.extendEvents({visitor:{user_id:null}});n.initAutoTracking({ignoreDisabledFormFields:!1,recordClicks:!0,recordFormSubmits:!0,recordInputChanges:!0,recordPageViews:!0,recordPageUnloads:!0,recordScrollState:!0})})})(prodPerfectConfig); // eslint-disable-line\n\n"],"sourceRoot":""}